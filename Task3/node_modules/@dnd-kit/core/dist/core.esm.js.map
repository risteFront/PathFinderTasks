{"version":3,"file":"core.esm.js","sources":["../src/components/Accessibility/defaults.ts","../src/store/actions.ts","../src/utilities/other/getValueIndex.ts","../src/utilities/other/noop.ts","../src/utilities/other/omit.ts","../src/store/context.ts","../src/utilities/coordinates/constants.ts","../src/utilities/coordinates/distanceBetweenPoints.ts","../src/utilities/event/isTouchEvent.ts","../src/utilities/event/isMouseEvent.ts","../src/utilities/coordinates/getEventCoordinates.ts","../src/utilities/coordinates/getRelativeTransformOrigin.ts","../src/utilities/algorithms/closestCenter.ts","../src/utilities/rect/adjustScale.ts","../src/utilities/rect/getRectDelta.ts","../src/utilities/rect/rectAdjustment.ts","../src/utilities/scroll/isScrollable.ts","../src/utilities/scroll/getScrollableAncestors.ts","../src/utilities/scroll/getScrollableElement.ts","../src/utilities/scroll/getScrollCoordinates.ts","../src/types/direction.ts","../src/utilities/scroll/getScrollPosition.ts","../src/utilities/scroll/documentScrollingElement.ts","../src/utilities/scroll/getScrollDirectionAndSpeed.ts","../src/utilities/scroll/getScrollOffsets.ts","../src/utilities/rect/getRect.ts","../src/utilities/rect/isViewRect.ts","../src/utilities/algorithms/closestCorners.ts","../src/utilities/algorithms/rectIntersection.ts","../src/utilities/document/getOwnerDocument.ts","../src/store/reducer.ts","../src/components/Accessibility/Accessibility.tsx","../src/hooks/utilities/useAutoScroller.ts","../src/hooks/utilities/useCachedNode.ts","../src/hooks/utilities/useCombineActivators.ts","../src/hooks/utilities/useLayoutRectMap.ts","../src/hooks/utilities/useScrollOffsets.ts","../src/hooks/utilities/useScrollableAncestors.ts","../src/hooks/utilities/useSyntheticListeners.ts","../src/hooks/utilities/useRect.ts","../src/sensors/useSensor.ts","../src/sensors/useSensors.ts","../src/sensors/utilities/Listeners.ts","../src/sensors/utilities/getEventListenerTarget.ts","../src/sensors/keyboard/types.ts","../src/sensors/keyboard/defaults.ts","../src/sensors/keyboard/KeyboardSensor.ts","../src/sensors/pointer/AbstractPointerSensor.ts","../src/sensors/pointer/PointerSensor.ts","../src/sensors/mouse/MouseSensor.ts","../src/sensors/touch/TouchSensor.ts","../src/modifiers/applyModifiers.ts","../src/components/DndContext/DndContext.tsx","../src/hooks/useDraggable.ts","../src/hooks/useDndContext.ts","../src/hooks/useDroppable.ts","../src/components/DragOverlay/hooks/useDerivedTransform.ts","../src/components/DragOverlay/hooks/useDropAnimation.ts","../src/components/DragOverlay/DragOverlay.tsx"],"sourcesContent":["import {Announcements, ScreenReaderInstructions} from './types';\n\nexport const screenReaderInstructions: ScreenReaderInstructions = {\n  draggable: `\n    To pick up a draggable item, press the space bar.\n    While dragging, use the arrow keys to move the item.\n    Press space again to drop the item in its new position, or press escape to cancel.\n  `,\n};\n\nexport const defaultAnnouncements: Announcements = {\n  onDragStart(id) {\n    return `Picked up draggable item ${id}.`;\n  },\n  onDragOver(id, overId) {\n    if (overId) {\n      return `Draggable item ${id} was moved over droppable area ${overId}.`;\n    }\n\n    return `Draggable item ${id} is no longer over a droppable area.`;\n  },\n  onDragEnd(id, overId) {\n    if (overId) {\n      return `Draggable item ${id} was dropped over droppable area ${overId}`;\n    }\n\n    return `Draggable item ${id} was dropped.`;\n  },\n  onDragCancel(id) {\n    return `Dragging was cancelled. Draggable item ${id} was dropped.`;\n  },\n};\n","import type {Coordinates, UniqueIdentifier} from '../types';\nimport type {DroppableContainer} from './types';\n\nexport enum Action {\n  DragStart = 'dragStart',\n  DragMove = 'dragMove',\n  DragEnd = 'dragEnd',\n  DragCancel = 'dragCancel',\n  RegisterDroppable = 'registerDroppable',\n  SetDroppableDisabled = 'setDroppableDisabled',\n  UnregisterDroppable = 'unregisterDroppable',\n}\n\nexport type Actions =\n  | {\n      type: Action.DragStart;\n      active: UniqueIdentifier;\n      initialCoordinates: Coordinates;\n    }\n  | {type: Action.DragMove; coordinates: Coordinates}\n  | {type: Action.DragEnd}\n  | {type: Action.DragCancel}\n  | {\n      type: Action.RegisterDroppable;\n      element: DroppableContainer;\n    }\n  | {\n      type: Action.SetDroppableDisabled;\n      id: UniqueIdentifier;\n      disabled: boolean;\n    }\n  | {\n      type: Action.UnregisterDroppable;\n      id: UniqueIdentifier;\n    };\n","export const getMaxValueIndex = (array: number[]) =>\n  getValueIndex(array, (value, tracked) => value > tracked);\n\nexport const getMinValueIndex = (array: number[]) =>\n  getValueIndex(array, (value, tracked) => value < tracked);\n\n/**\n * Returns the index of the smallest number in an array of numbers\n */\nexport function getValueIndex(\n  array: number[],\n  comparator: (value: number, tracked: number) => boolean\n) {\n  if (array.length === 0) {\n    return -1;\n  }\n\n  let tracked = array[0];\n  let index = 0;\n\n  for (var i = 1; i < array.length; i++) {\n    if (comparator(array[i], tracked)) {\n      index = i;\n      tracked = array[i];\n    }\n  }\n\n  return index;\n}\n","export function noop(..._args: any) {}\n","export function omit<T>(id: string, elements: Record<string, T>) {\n  const {[id]: _, ...other} = elements;\n\n  return other;\n}\n","import {createContext} from 'react';\n\nimport {noop} from '../utilities/other';\nimport {DndContextDescriptor} from './types';\n\nexport const Context = createContext<DndContextDescriptor>({\n  activatorEvent: null,\n  active: null,\n  activeNode: null,\n  activeNodeRect: null,\n  activeNodeClientRect: null,\n  activators: [],\n  ariaDescribedById: {\n    draggable: '',\n  },\n  overlayNode: {\n    nodeRef: {\n      current: null,\n    },\n    rect: null,\n    setRef: noop,\n  },\n  containerNodeRect: null,\n  dispatch: noop,\n  draggableNodes: {},\n  droppableRects: new Map(),\n  droppableContainers: {},\n  over: null,\n  scrollableAncestors: [],\n  scrollableAncestorRects: [],\n  recomputeLayouts: noop,\n  windowRect: null,\n  willRecomputeLayouts: false,\n});\n","import {Coordinates} from '../../types';\n\nexport const defaultCoordinates: Coordinates = Object.freeze({\n  x: 0,\n  y: 0,\n});\n","import {Coordinates} from '../../types';\n\n/**\n * Returns the distance between two points\n */\nexport function distanceBetween(p1: Coordinates, p2: Coordinates) {\n  return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\n}\n","export function isTouchEvent(event: Event): event is TouchEvent {\n  return window?.TouchEvent && event instanceof TouchEvent;\n}\n","export function isMouseEvent(event: Event): event is MouseEvent {\n  return (\n    (window?.MouseEvent && event instanceof MouseEvent) ||\n    event.type.includes('mouse')\n  );\n}\n","import {Coordinates} from '../../types';\nimport {isMouseEvent, isTouchEvent} from '../event';\n\n/**\n * Returns the normalized x and y coordinates for mouse and touch events.\n */\nexport function getEventCoordinates(event: Event): Coordinates {\n  if (isTouchEvent(event)) {\n    if (event.touches && event.touches.length) {\n      const {clientX: x, clientY: y} = event.touches[0];\n\n      return {\n        x,\n        y,\n      };\n    } else if (event.changedTouches && event.changedTouches.length) {\n      const {clientX: x, clientY: y} = event.changedTouches[0];\n\n      return {\n        x,\n        y,\n      };\n    }\n  }\n\n  if (isMouseEvent(event)) {\n    return {\n      x: event.clientX,\n      y: event.clientY,\n    };\n  }\n\n  return {\n    x: 0,\n    y: 0,\n  };\n}\n","import {getEventCoordinates} from './getEventCoordinates';\n\nexport function getRelativeTransformOrigin(\n  event: MouseEvent | TouchEvent | KeyboardEvent,\n  rect: ClientRect\n) {\n  if (event instanceof KeyboardEvent) {\n    return '0 0';\n  }\n\n  const eventCoordinates = getEventCoordinates(event);\n  const transformOrigin = {\n    x: ((eventCoordinates.x - rect.left) / rect.width) * 100,\n    y: ((eventCoordinates.y - rect.top) / rect.height) * 100,\n  };\n\n  return `${transformOrigin.x}% ${transformOrigin.y}%`;\n}\n","import {getMinValueIndex} from '../other';\nimport {distanceBetween} from '../coordinates';\nimport type {Coordinates, LayoutRect} from '../../types';\nimport type {CollisionDetection} from './types';\n\n/**\n * Returns the coordinates of the center of a given ClientRect\n */\nfunction centerOfRectangle(\n  rect: LayoutRect,\n  left = rect.offsetLeft,\n  top = rect.offsetTop\n): Coordinates {\n  return {\n    x: left + rect.width * 0.5,\n    y: top + rect.height * 0.5,\n  };\n}\n\n/**\n * Returns the closest rectangle from an array of rectangles to the center of a given\n * rectangle.\n */\nexport const closestCenter: CollisionDetection = (rects, rect) => {\n  const centerRect = centerOfRectangle(rect, rect.left, rect.top);\n  const distances = rects.map(([_, rect]) =>\n    distanceBetween(centerOfRectangle(rect), centerRect)\n  );\n\n  const minValueIndex = getMinValueIndex(distances);\n\n  return rects[minValueIndex] ? rects[minValueIndex][0] : null;\n};\n","import type {Transform} from '@dnd-kit/utilities';\nimport type {LayoutRect} from '../../types';\n\nexport function adjustScale(\n  transform: Transform,\n  rect1: LayoutRect | null,\n  rect2: LayoutRect | null\n): Transform {\n  return {\n    ...transform,\n    scaleX: rect1 && rect2 ? rect1.width / rect2.width : 1,\n    scaleY: rect1 && rect2 ? rect1.height / rect2.height : 1,\n  };\n}\n","import type {Coordinates, ViewRect} from '../../types';\nimport {defaultCoordinates} from '../coordinates';\n\nexport function getRectDelta(\n  rect1: ViewRect | null,\n  rect2: ViewRect | null\n): Coordinates {\n  return rect1 && rect2\n    ? {\n        x: rect1.left - rect2.left,\n        y: rect1.top - rect2.top,\n      }\n    : defaultCoordinates;\n}\n","import {Coordinates, ViewRect} from '../../types';\n\nexport function createRectAdjustmentFn(modifier: number) {\n  return function adjustViewRect(\n    viewRect: ViewRect,\n    ...adjustments: Coordinates[]\n  ): ViewRect {\n    return adjustments.reduce<ViewRect>(\n      (acc, adjustment) => ({\n        ...acc,\n        top: acc.top + modifier * adjustment.y,\n        bottom: acc.bottom + modifier * adjustment.y,\n        left: acc.left + modifier * adjustment.x,\n        right: acc.right + modifier * adjustment.x,\n        offsetLeft: acc.offsetLeft + modifier * adjustment.x,\n        offsetTop: acc.offsetTop + modifier * adjustment.y,\n      }),\n      {...viewRect}\n    );\n  };\n}\n\nexport const getAdjustedRect = createRectAdjustmentFn(1);\n","export function isScrollable(node: HTMLElement): boolean {\n  const computedStyle = window.getComputedStyle(node);\n  const overflowRegex = /(auto|scroll)/;\n  const properties = ['overflow', 'overflowX', 'overflowY'];\n\n  return (\n    properties.find((property) => {\n      const value = computedStyle[property as keyof CSSStyleDeclaration];\n\n      return typeof value === 'string' ? overflowRegex.test(value) : false;\n    }) != null\n  );\n}\n","import {isScrollable} from './isScrollable';\n\nexport function getScrollableAncestors(element: Node | null): Element[] {\n  const scrollParents: Element[] = [];\n\n  function findScrollableAncestors(node: Node | null): Element[] {\n    if (!node) {\n      return scrollParents;\n    }\n\n    if (node instanceof Document && node.scrollingElement != null) {\n      scrollParents.push(node.scrollingElement);\n\n      return scrollParents;\n    }\n\n    if (!(node instanceof HTMLElement) || node instanceof SVGElement) {\n      return scrollParents;\n    }\n\n    if (isScrollable(node)) {\n      scrollParents.push(node);\n    }\n\n    return findScrollableAncestors(node.parentNode);\n  }\n\n  return element ? findScrollableAncestors(element.parentNode) : scrollParents;\n}\n","import {canUseDOM} from '@dnd-kit/utilities';\n\nexport function getScrollableElement(element: EventTarget | null) {\n  if (!canUseDOM) {\n    return null;\n  }\n\n  if (element === document.scrollingElement || element instanceof Document) {\n    return window;\n  }\n\n  if (element instanceof HTMLElement) {\n    return element;\n  }\n\n  return null;\n}\n","import {Coordinates} from '../../types';\n\nexport function getScrollCoordinates(\n  element: Element | typeof window\n): Coordinates {\n  if (element instanceof Window) {\n    return {\n      x: element.scrollX,\n      y: element.scrollY,\n    };\n  }\n\n  return {\n    x: element.scrollLeft,\n    y: element.scrollTop,\n  };\n}\n","export enum Direction {\n  Forward = 1,\n  Backward = -1,\n}\n","function getScrollElementRect(element: Element) {\n  if (element === document.scrollingElement) {\n    const {innerWidth, innerHeight} = window;\n\n    return {\n      top: 0,\n      left: 0,\n      right: innerWidth,\n      bottom: innerHeight,\n      width: innerWidth,\n      height: innerHeight,\n    };\n  }\n\n  return element.getBoundingClientRect();\n}\n\nexport function getScrollPosition(scrollingContainer: Element) {\n  const scrollElementRect = getScrollElementRect(scrollingContainer);\n  const minScroll = {\n    x: 0,\n    y: 0,\n  };\n  const maxScroll = {\n    x: scrollingContainer.scrollWidth - scrollElementRect.width,\n    y: scrollingContainer.scrollHeight - scrollElementRect.height,\n  };\n\n  const isTop = scrollingContainer.scrollTop <= minScroll.y;\n  const isLeft = scrollingContainer.scrollLeft <= minScroll.x;\n  const isBottom = scrollingContainer.scrollTop >= maxScroll.y;\n  const isRight = scrollingContainer.scrollLeft >= maxScroll.x;\n\n  return {\n    isTop,\n    isLeft,\n    isBottom,\n    isRight,\n    scrollElementRect,\n    maxScroll,\n    minScroll,\n  };\n}\n","import {canUseDOM} from '@dnd-kit/utilities';\n\nexport function isDocumentScrollingElement(element: Element | null) {\n  if (!canUseDOM || !element) {\n    return false;\n  }\n\n  return element === document.scrollingElement;\n}\n","import {Direction, ViewRect} from '../../types';\nimport {getScrollPosition} from './getScrollPosition';\nimport {isDocumentScrollingElement} from './documentScrollingElement';\n\nexport function getScrollDirectionAndSpeed(\n  scrollContainer: Element,\n  scrollContainerRect: ViewRect,\n  rect: ViewRect,\n  acceleration = 10\n) {\n  const {clientHeight, clientWidth} = scrollContainer;\n  const finalScrollContainerRect = isDocumentScrollingElement(scrollContainer)\n    ? {\n        top: 0,\n        left: 0,\n        right: clientWidth,\n        bottom: clientHeight,\n      }\n    : scrollContainerRect;\n  const {isTop, isBottom, isLeft, isRight} = getScrollPosition(scrollContainer);\n  const {width, height, left, top, bottom, right} = rect;\n  const direction = {\n    x: 0,\n    y: 0,\n  };\n  const speed = {\n    x: 0,\n    y: 0,\n  };\n\n  if (!isTop && top <= finalScrollContainerRect.top + height) {\n    // Scroll Up\n    direction.y = Direction.Backward;\n    speed.y =\n      acceleration *\n      Math.abs((top - height - finalScrollContainerRect.top) / height);\n  } else if (!isBottom && bottom >= finalScrollContainerRect.bottom - height) {\n    // Scroll Down\n    direction.y = Direction.Forward;\n    speed.y =\n      acceleration *\n      Math.abs((finalScrollContainerRect.bottom - height - bottom) / height);\n  }\n\n  if (!isRight && right >= finalScrollContainerRect.right - width) {\n    // Scroll Right\n    direction.x = Direction.Forward;\n    speed.x =\n      acceleration *\n      Math.abs((finalScrollContainerRect.right - width - right) / width);\n  } else if (!isLeft && left <= finalScrollContainerRect.left + width) {\n    // Scroll Left\n    direction.x = Direction.Backward;\n    speed.x =\n      acceleration *\n      Math.abs((left - width - finalScrollContainerRect.left) / width);\n  }\n\n  return {\n    direction,\n    speed,\n  };\n}\n","import {add} from '@dnd-kit/utilities';\n\nimport type {Coordinates} from '../../types';\nimport {getScrollCoordinates} from './getScrollCoordinates';\nimport {defaultCoordinates} from '../coordinates';\n\nexport function getScrollOffsets(scrollableAncestors: Element[]): Coordinates {\n  return scrollableAncestors.reduce<Coordinates>((acc, node) => {\n    return add(acc, getScrollCoordinates(node));\n  }, defaultCoordinates);\n}\n","import type {Coordinates, ClientRect, LayoutRect, ViewRect} from '../../types';\nimport {getScrollableAncestors, getScrollOffsets} from '../scroll';\nimport {defaultCoordinates} from '../coordinates';\n\nfunction getEdgeOffset(\n  node: HTMLElement | null,\n  parent: (Node & ParentNode) | null,\n  offset = defaultCoordinates\n): Coordinates {\n  if (!node || !(node instanceof HTMLElement)) {\n    return offset;\n  }\n\n  const nodeOffset = {\n    x: offset.x + node.offsetLeft,\n    y: offset.y + node.offsetTop,\n  };\n\n  if (node.offsetParent === parent) {\n    return nodeOffset;\n  }\n\n  return getEdgeOffset(node.offsetParent as HTMLElement, parent, nodeOffset);\n}\n\nexport function getElementLayout(element: HTMLElement): LayoutRect {\n  const {offsetWidth: width, offsetHeight: height} = element;\n  const {x: offsetLeft, y: offsetTop} = getEdgeOffset(element, null);\n\n  return {\n    width,\n    height,\n    offsetTop,\n    offsetLeft,\n  };\n}\n\nexport function getBoundingClientRect(\n  element: HTMLElement | Window\n): ClientRect {\n  if (element instanceof Window) {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    return {\n      top: 0,\n      left: 0,\n      right: width,\n      bottom: height,\n      width,\n      height,\n      offsetTop: 0,\n      offsetLeft: 0,\n    };\n  }\n\n  const {offsetTop, offsetLeft} = getElementLayout(element);\n  const {\n    width,\n    height,\n    top,\n    bottom,\n    left,\n    right,\n  } = element.getBoundingClientRect();\n\n  return {\n    width,\n    height,\n    top,\n    bottom,\n    right,\n    left,\n    offsetTop,\n    offsetLeft,\n  };\n}\n\nexport function getViewRect(element: HTMLElement): ViewRect {\n  const {width, height, offsetTop, offsetLeft} = getElementLayout(element);\n  const scrollableAncestors = getScrollableAncestors(element);\n  const scrollOffsets = getScrollOffsets(scrollableAncestors);\n\n  const top = offsetTop - scrollOffsets.y;\n  const left = offsetLeft - scrollOffsets.x;\n\n  return {\n    width,\n    height,\n    top,\n    bottom: top + height,\n    right: left + width,\n    left,\n    offsetTop,\n    offsetLeft,\n  };\n}\n","import type {LayoutRect, ViewRect} from '../../types';\n\nexport function isViewRect(entry: LayoutRect | ViewRect): entry is ViewRect {\n  return 'top' in entry;\n}\n","import {getMinValueIndex} from '../other';\nimport {distanceBetween} from '../coordinates';\nimport {isViewRect} from '../rect';\nimport type {LayoutRect} from '../../types';\nimport type {CollisionDetection} from './types';\n\n/**\n * Returns the coordinates of the corners of a given rectangle:\n * [TopLeft {x, y}, TopRight {x, y}, BottomLeft {x, y}, BottomRight {x, y}]\n */\n\nfunction cornersOfRectangle(\n  rect: LayoutRect,\n  left = rect.offsetLeft,\n  top = rect.offsetTop\n) {\n  return [\n    {\n      x: left,\n      y: top,\n    },\n    {\n      x: left + rect.width,\n      y: top,\n    },\n    {\n      x: left,\n      y: top + rect.height,\n    },\n    {\n      x: left + rect.width,\n      y: top + rect.height,\n    },\n  ];\n}\n\n/**\n * Returns the closest rectangle from an array of rectangles to the corners of\n * another rectangle.\n */\nexport const closestCorners: CollisionDetection = (entries, target) => {\n  const corners = cornersOfRectangle(target, target.left, target.top);\n\n  const distances = entries.map(([_, entry]) => {\n    const entryCorners = cornersOfRectangle(\n      entry,\n      isViewRect(entry) ? entry.left : undefined,\n      isViewRect(entry) ? entry.top : undefined\n    );\n    const distances = corners.reduce((accumulator, corner, index) => {\n      return accumulator + distanceBetween(entryCorners[index], corner);\n    }, 0);\n\n    return Number((distances / 4).toFixed(4));\n  });\n\n  const minValueIndex = getMinValueIndex(distances);\n\n  return entries[minValueIndex] ? entries[minValueIndex][0] : null;\n};\n","import {getMaxValueIndex} from '../other';\nimport type {LayoutRect, ViewRect} from '../../types';\nimport type {CollisionDetection} from './types';\n\n/**\n * Returns the intersecting rectangle area between two rectangles\n */\nfunction getIntersectionRatio(entry: LayoutRect, target: ViewRect): number {\n  const top = Math.max(target.top, entry.offsetTop);\n  const left = Math.max(target.left, entry.offsetLeft);\n  const right = Math.min(\n    target.left + target.width,\n    entry.offsetLeft + entry.width\n  );\n  const bottom = Math.min(\n    target.top + target.height,\n    entry.offsetTop + entry.height\n  );\n  const width = right - left;\n  const height = bottom - top;\n\n  if (left < right && top < bottom) {\n    const targetArea = target.width * target.height;\n    const entryArea = entry.width * entry.height;\n    const intersectionArea = width * height;\n    const intersectionRatio =\n      intersectionArea / (targetArea + entryArea - intersectionArea);\n\n    return Number(intersectionRatio.toFixed(4));\n  }\n\n  // Rectangles do not overlap, or overlap has an area of zero (edge/corner overlap)\n  return 0;\n}\n\n/**\n * Returns the rectangle that has the greatest intersection area with a given\n * rectangle in an array of rectangles.\n */\nexport const rectIntersection: CollisionDetection = (entries, target) => {\n  const intersections = entries.map(([_, entry]) =>\n    getIntersectionRatio(entry, target)\n  );\n\n  const maxValueIndex = getMaxValueIndex(intersections);\n\n  if (intersections[maxValueIndex] <= 0) {\n    return null;\n  }\n\n  return entries[maxValueIndex] ? entries[maxValueIndex][0] : null;\n};\n","export function getOwnerDocument(target: Event['target']) {\n  return target instanceof HTMLElement ? target.ownerDocument : document;\n}\n","import {omit} from '../utilities';\nimport {Action, Actions} from './actions';\nimport type {State} from './types';\n\nexport function getInitialState(): State {\n  return {\n    draggable: {\n      active: null,\n      initialCoordinates: {x: 0, y: 0},\n      lastEvent: null,\n      nodes: {},\n      translate: {x: 0, y: 0},\n    },\n    droppable: {\n      containers: {},\n    },\n  };\n}\n\nexport function reducer(state: State, action: Actions): State {\n  switch (action.type) {\n    case Action.DragStart:\n      return {\n        ...state,\n        draggable: {\n          ...state.draggable,\n          initialCoordinates: action.initialCoordinates,\n          active: action.active,\n          lastEvent: Action.DragStart,\n        },\n      };\n    case Action.DragMove:\n      if (!state.draggable.active) {\n        return state;\n      }\n\n      return {\n        ...state,\n        draggable: {\n          ...state.draggable,\n          translate: {\n            x: action.coordinates.x - state.draggable.initialCoordinates.x,\n            y: action.coordinates.y - state.draggable.initialCoordinates.y,\n          },\n        },\n      };\n    case Action.DragEnd:\n    case Action.DragCancel:\n      return {\n        ...state,\n        draggable: {\n          ...state.draggable,\n          active: null,\n          initialCoordinates: {x: 0, y: 0},\n          translate: {x: 0, y: 0},\n          lastEvent: action.type,\n        },\n      };\n\n    case Action.RegisterDroppable: {\n      const {element} = action;\n      const {id} = element;\n\n      return {\n        ...state,\n        droppable: {\n          ...state.droppable,\n          containers: {\n            ...state.droppable.containers,\n            [id]: element,\n          },\n        },\n      };\n    }\n\n    case Action.SetDroppableDisabled: {\n      const {id, disabled} = action;\n      const element = state.droppable.containers[id];\n\n      if (!element) {\n        return state;\n      }\n\n      return {\n        ...state,\n        droppable: {\n          ...state.droppable,\n          containers: {\n            ...state.droppable.containers,\n            [id]: {\n              ...element,\n              disabled,\n            },\n          },\n        },\n      };\n    }\n\n    case Action.UnregisterDroppable: {\n      const {id} = action;\n\n      return {\n        ...state,\n        droppable: {\n          ...state.droppable,\n          containers: omit(id, state.droppable.containers),\n        },\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import React, {useRef, useEffect} from 'react';\nimport {createPortal} from 'react-dom';\nimport {canUseDOM, useUniqueId} from '@dnd-kit/utilities';\nimport {HiddenText, LiveRegion, useAnnouncement} from '@dnd-kit/accessibility';\n\nimport {Announcements, ScreenReaderInstructions} from './types';\nimport {defaultAnnouncements} from './defaults';\nimport {UniqueIdentifier} from '../../types';\nimport {Action, State} from '../../store';\n\ninterface Props {\n  announcements?: Announcements;\n  activeId: UniqueIdentifier | null;\n  overId: UniqueIdentifier | null;\n  lastEvent: State['draggable']['lastEvent'];\n  screenReaderInstructions: ScreenReaderInstructions;\n  hiddenTextDescribedById: UniqueIdentifier;\n}\n\nexport function Accessibility({\n  announcements = defaultAnnouncements,\n  activeId,\n  overId,\n  lastEvent,\n  hiddenTextDescribedById,\n  screenReaderInstructions,\n}: Props) {\n  const {announce, entries} = useAnnouncement();\n  const tracked = useRef({\n    activeId,\n    overId,\n  });\n  const liveRegionId = useUniqueId(`DndLiveRegion`);\n\n  useEffect(() => {\n    const {\n      activeId: previousActiveId,\n      overId: previousOverId,\n    } = tracked.current;\n    let announcement: string | undefined;\n\n    if (!previousActiveId && activeId) {\n      announcement = announcements.onDragStart(activeId);\n    } else if (!activeId && previousActiveId) {\n      if (lastEvent === Action.DragEnd) {\n        announcement = announcements.onDragEnd(\n          previousActiveId,\n          previousOverId ?? undefined\n        );\n      } else if (lastEvent === Action.DragCancel) {\n        announcement = announcements.onDragCancel(previousActiveId);\n      }\n    } else if (activeId && previousActiveId && overId !== previousOverId) {\n      announcement = announcements.onDragOver(activeId, overId ?? undefined);\n    }\n\n    if (announcement) {\n      announce(announcement);\n    }\n\n    if (\n      tracked.current.overId !== overId ||\n      tracked.current.activeId !== activeId\n    ) {\n      tracked.current = {\n        activeId,\n        overId,\n      };\n    }\n  }, [announcements, announce, activeId, overId, lastEvent]);\n\n  return canUseDOM\n    ? createPortal(\n        <>\n          <HiddenText\n            id={hiddenTextDescribedById}\n            value={screenReaderInstructions.draggable}\n          />\n          <LiveRegion id={liveRegionId} entries={entries} />\n        </>,\n        document.body\n      )\n    : null;\n}\n","import {useCallback, useEffect, useRef} from 'react';\nimport {useInterval} from '@dnd-kit/utilities';\n\nimport {getScrollDirectionAndSpeed, defaultCoordinates} from '../../utilities';\nimport type {Coordinates, Direction, ViewRect} from '../../types';\n\ninterface Arguments {\n  disabled: boolean;\n  draggingRect: ViewRect | null;\n  interval?: number;\n  scrollableAncestors: Element[];\n  scrollableAncestorRects: ViewRect[];\n}\n\ninterface ScrollDirection {\n  x: 0 | Direction;\n  y: 0 | Direction;\n}\n\nexport function useAutoScroller({\n  disabled,\n  draggingRect,\n  interval = 5,\n  scrollableAncestors,\n  scrollableAncestorRects,\n}: Arguments) {\n  const [setAutoScrollInterval, clearAutoScrollInterval] = useInterval();\n  const scrollSpeed = useRef<Coordinates>({\n    x: 1,\n    y: 1,\n  });\n  const scrollDirection = useRef<ScrollDirection>(defaultCoordinates);\n  const scrollContainerRef = useRef<Element | null>(null);\n  const autoScroll = useCallback(() => {\n    const scrollContainer = scrollContainerRef.current;\n\n    if (!scrollContainer) {\n      return;\n    }\n\n    const scrollLeft = scrollSpeed.current.x * scrollDirection.current.x;\n    const scrollTop = scrollSpeed.current.y * scrollDirection.current.y;\n\n    scrollContainer.scrollBy(scrollLeft, scrollTop);\n  }, []);\n\n  useEffect(() => {\n    if (disabled || !scrollableAncestors.length || !draggingRect) {\n      clearAutoScrollInterval();\n      return;\n    }\n\n    for (const scrollContainer of scrollableAncestors) {\n      const index = scrollableAncestors.indexOf(scrollContainer);\n      const scrolllContainerRect = scrollableAncestorRects[index];\n\n      if (!scrolllContainerRect) {\n        continue;\n      }\n\n      const {direction, speed} = getScrollDirectionAndSpeed(\n        scrollContainer,\n        scrolllContainerRect,\n        draggingRect\n      );\n\n      scrollSpeed.current = speed;\n      scrollDirection.current = direction;\n\n      clearAutoScrollInterval();\n\n      if (speed.x > 0 || speed.y > 0) {\n        scrollContainerRef.current = scrollContainer;\n        setAutoScrollInterval(autoScroll, interval);\n\n        break;\n      }\n    }\n  }, [\n    autoScroll,\n    draggingRect,\n    clearAutoScrollInterval,\n    disabled,\n    setAutoScrollInterval,\n    scrollableAncestors,\n    scrollableAncestorRects,\n    interval,\n  ]);\n}\n","import {useLazyMemo} from '@dnd-kit/utilities';\nimport type {DraggableNode} from '../../store';\nimport {UniqueIdentifier} from '../../types';\n\nexport function useCachedNode(\n  draggableNode: DraggableNode | null,\n  active: UniqueIdentifier | null\n): DraggableNode['current'] {\n  return useLazyMemo(\n    (cachedNode) => {\n      if (active === null) {\n        return null;\n      }\n\n      // In some cases, the draggable node can unmount while dragging\n      // This is the case for virtualized lists. In those situations,\n      // we fall back to the last known value for that node.\n      return draggableNode?.current ?? cachedNode ?? null;\n    },\n    [draggableNode, active]\n  );\n}\n","import {useMemo} from 'react';\n\nimport type {SensorDescriptor, SensorHandler} from '../../sensors';\nimport type {\n  SyntheticListener,\n  SyntheticListeners,\n} from './useSyntheticListeners';\n\nexport function useCombineActivators(\n  sensors: SensorDescriptor<any>[],\n  getSyntheticHandler: (\n    handler: SensorHandler,\n    sensor: SensorDescriptor<any>\n  ) => SyntheticListener['handler']\n): SyntheticListeners {\n  return useMemo(\n    () =>\n      sensors.reduce<SyntheticListeners>((accumulator, sensor) => {\n        const {sensor: Sensor} = sensor;\n\n        const sensorActivators = Sensor.activators.map((activator) => ({\n          eventName: activator.eventName,\n          handler: getSyntheticHandler(activator.handler, sensor),\n        }));\n\n        return [...accumulator, ...sensorActivators];\n      }, []),\n    [sensors, getSyntheticHandler]\n  );\n}\n","import {useCallback, useEffect, useRef, useState} from 'react';\nimport {useLazyMemo} from '@dnd-kit/utilities';\n\nimport {getElementLayout} from '../../utilities';\nimport {DroppableContainers, LayoutRectMap} from '../../store/types';\n\nconst defaultValue: LayoutRectMap = new Map();\n\nexport function useLayoutRectMap(\n  containers: DroppableContainers,\n  disabled: boolean\n) {\n  const [willRecomputeLayouts, setWillRecomputeLayouts] = useState(false);\n  const containersRef = useRef(containers);\n  const recomputeLayouts = useCallback(() => {\n    setWillRecomputeLayouts(true);\n  }, []);\n  const layoutRectMap = useLazyMemo<LayoutRectMap>(\n    (previousValue) => {\n      if (disabled) {\n        return defaultValue;\n      }\n\n      if (\n        !previousValue ||\n        previousValue === defaultValue ||\n        containersRef.current !== containers ||\n        willRecomputeLayouts\n      ) {\n        for (let container of Object.values(containers)) {\n          if (!container) {\n            continue;\n          }\n\n          container.rect.current = container.node.current\n            ? getElementLayout(container.node.current)\n            : null;\n        }\n\n        return createLayoutRectMap(containers);\n      }\n\n      return previousValue;\n    },\n    [containers, disabled, willRecomputeLayouts]\n  );\n\n  useEffect(() => {\n    containersRef.current = containers;\n  }, [containers]);\n\n  useEffect(() => {\n    if (willRecomputeLayouts) {\n      setWillRecomputeLayouts(false);\n    }\n  }, [willRecomputeLayouts]);\n\n  return {layoutRectMap, recomputeLayouts, willRecomputeLayouts};\n}\n\nfunction createLayoutRectMap(\n  containers: DroppableContainers | null\n): LayoutRectMap {\n  const layoutRectMap: LayoutRectMap = new Map();\n\n  if (containers) {\n    for (const container of Object.values(containers)) {\n      if (!container) {\n        continue;\n      }\n\n      const {id, rect, disabled} = container;\n\n      if (disabled || rect.current == null) {\n        continue;\n      }\n\n      layoutRectMap.set(id, rect.current);\n    }\n  }\n\n  return layoutRectMap;\n}\n","import {useState, useCallback, useMemo, useRef, useEffect} from 'react';\nimport {add} from '@dnd-kit/utilities';\n\nimport {\n  defaultCoordinates,\n  getScrollableElement,\n  getScrollCoordinates,\n  getScrollOffsets,\n} from '../../utilities';\nimport type {Coordinates} from '../../types';\n\ntype ScrollCoordinates = Map<HTMLElement | Window, Coordinates>;\n\nexport function useScrollOffsets(elements: Element[]): Coordinates {\n  const [\n    scrollCoordinates,\n    setScrollCoordinates,\n  ] = useState<ScrollCoordinates | null>(null);\n  const prevElements = useRef(elements);\n\n  // To-do: Throttle the handleScroll callback\n  const handleScroll = useCallback((event: Event) => {\n    const scrollingElement = getScrollableElement(event.target);\n\n    if (!scrollingElement) {\n      return;\n    }\n\n    setScrollCoordinates((scrollCoordinates) => {\n      if (!scrollCoordinates) {\n        return null;\n      }\n\n      scrollCoordinates.set(\n        scrollingElement,\n        getScrollCoordinates(scrollingElement)\n      );\n\n      return new Map(scrollCoordinates);\n    });\n  }, []);\n\n  useEffect(() => {\n    const previousElements = prevElements.current;\n\n    if (elements !== previousElements) {\n      cleanup(previousElements);\n\n      const entries = elements\n        .map((element) => {\n          const scrollableElement = getScrollableElement(element);\n\n          if (scrollableElement) {\n            scrollableElement.addEventListener('scroll', handleScroll, {\n              passive: true,\n            });\n\n            return [\n              scrollableElement,\n              getScrollCoordinates(scrollableElement),\n            ] as const;\n          }\n\n          return null;\n        })\n        .filter(\n          (\n            entry\n          ): entry is [\n            HTMLElement | (Window & typeof globalThis),\n            Coordinates\n          ] => entry != null\n        );\n\n      setScrollCoordinates(entries.length ? new Map(entries) : null);\n\n      prevElements.current = elements;\n    }\n\n    return () => {\n      cleanup(elements);\n      cleanup(previousElements);\n    };\n\n    function cleanup(elements: Element[]) {\n      elements.forEach((element) => {\n        const scrollableElement = getScrollableElement(element);\n\n        scrollableElement?.removeEventListener('scroll', handleScroll);\n      });\n    }\n  }, [handleScroll, elements]);\n\n  return useMemo(() => {\n    if (elements.length) {\n      return scrollCoordinates\n        ? Array.from(scrollCoordinates.values()).reduce(\n            (acc, coordinates) => add(acc, coordinates),\n            defaultCoordinates\n          )\n        : getScrollOffsets(elements);\n    }\n\n    return defaultCoordinates;\n  }, [elements, scrollCoordinates]);\n}\n","import {useEffect, useRef} from 'react';\nimport {useLazyMemo} from '@dnd-kit/utilities';\n\nimport {getScrollableAncestors} from '../../utilities';\n\nconst defaultValue: Element[] = [];\n\nexport function useScrollableAncestors(node: HTMLElement | null) {\n  const previousNode = useRef(node);\n\n  const ancestors = useLazyMemo<Element[]>(\n    (previousValue) => {\n      if (!node) {\n        return defaultValue;\n      }\n\n      if (\n        previousValue &&\n        node &&\n        previousNode.current &&\n        node.parentNode === previousNode.current.parentNode\n      ) {\n        return previousValue;\n      }\n\n      return getScrollableAncestors(node);\n    },\n    [node]\n  );\n\n  useEffect(() => {\n    previousNode.current = node;\n  }, [node]);\n\n  return ancestors;\n}\n","import {useMemo} from 'react';\n\nimport type {SyntheticEventName, UniqueIdentifier} from '../../types';\n\nexport type SyntheticListener = {\n  eventName: SyntheticEventName;\n  handler: (event: React.SyntheticEvent, id: UniqueIdentifier) => void;\n};\n\nexport type SyntheticListeners = SyntheticListener[];\n\nexport type SyntheticListenerMap = Record<string, Function>;\n\nexport function useSyntheticListeners(\n  listeners: SyntheticListeners,\n  id: string\n): SyntheticListenerMap {\n  return useMemo(() => {\n    return listeners.reduce<SyntheticListenerMap>(\n      (acc, {eventName, handler}) => {\n        acc[eventName] = (event: React.SyntheticEvent) => {\n          handler(event, id);\n        };\n\n        return acc;\n      },\n      {} as SyntheticListenerMap\n    );\n  }, [listeners, id]);\n}\n","import {useRef} from 'react';\nimport {useLazyMemo} from '@dnd-kit/utilities';\n\nimport {\n  getBoundingClientRect,\n  getElementLayout,\n  getViewRect,\n} from '../../utilities';\nimport type {LayoutRect} from '../../types';\n\ntype RectFn<T, U> = (element: U) => T;\n\nexport const useClientRect = createUseRectFn(getBoundingClientRect);\nexport const useClientRects = createUseRectsFn(getBoundingClientRect);\nexport const useViewRect = createUseRectFn(getViewRect);\nexport const useLayoutRect = createUseRectFn(getElementLayout);\n\nfunction createUseRectFn<T = LayoutRect, U = HTMLElement>(\n  getRect: RectFn<T, U>\n) {\n  return function useClientRect(\n    element: U | null,\n    forceRecompute?: boolean\n  ): T | null {\n    const previousElement = useRef(element);\n\n    return useLazyMemo<T | null>(\n      (previousValue) => {\n        if (!element) {\n          return null;\n        }\n\n        if (\n          forceRecompute ||\n          (!previousValue && element) ||\n          element !== previousElement.current\n        ) {\n          if (element instanceof HTMLElement && element.parentNode == null) {\n            return null;\n          }\n\n          return getRect(element as U);\n        }\n\n        return previousValue ?? null;\n      },\n      [element, forceRecompute]\n    );\n  };\n}\n\nfunction createUseRectsFn<T = LayoutRect>(getRect: RectFn<T, HTMLElement>) {\n  const defaultValue: T[] = [];\n\n  return function useRects(elements: Element[], forceRecompute?: boolean): T[] {\n    const previousElements = useRef(elements);\n\n    return useLazyMemo<T[]>(\n      (previousValue) => {\n        if (!elements.length) {\n          return defaultValue;\n        }\n\n        if (\n          forceRecompute ||\n          (!previousValue && elements.length) ||\n          elements !== previousElements.current\n        ) {\n          return elements.map((element) => getRect(element as HTMLElement));\n        }\n\n        return previousValue ?? defaultValue;\n      },\n      [elements, forceRecompute]\n    );\n  };\n}\n","import {useMemo} from 'react';\n\nimport {Sensor, SensorDescriptor, SensorOptions} from './types';\n\nexport function useSensor<T extends SensorOptions>(\n  sensor: Sensor<T>,\n  options?: T\n): SensorDescriptor<T> {\n  return useMemo(\n    () => ({\n      sensor,\n      options: options ?? ({} as T),\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [sensor, options]\n  );\n}\n","import {useMemo} from 'react';\nimport {SensorDescriptor, SensorOptions} from './types';\n\nexport function useSensors(\n  ...sensors: (SensorDescriptor<any> | undefined | null)[]\n): SensorDescriptor<SensorOptions>[] {\n  return useMemo(\n    () =>\n      [...sensors].filter(\n        (sensor): sensor is SensorDescriptor<any> => sensor != null\n      ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [...sensors]\n  );\n}\n","export class Listeners {\n  private listeners: {\n    eventName: string;\n    handler: EventListenerOrEventListenerObject;\n  }[] = [];\n\n  constructor(private target: HTMLElement | Document) {}\n\n  public add(\n    eventName: string,\n    handler: EventListenerOrEventListenerObject,\n    options?: AddEventListenerOptions | false\n  ) {\n    this.target.addEventListener(eventName, handler, options);\n    this.listeners.push({eventName, handler});\n  }\n\n  public removeAll() {\n    this.listeners.forEach(({eventName, handler}) =>\n      this.target.removeEventListener(eventName, handler)\n    );\n  }\n}\n","import {getOwnerDocument} from '../../utilities';\n\nexport function getEventListenerTarget(\n  element: EventTarget | null\n): HTMLElement | Document {\n  return element instanceof HTMLElement ? element : getOwnerDocument(element);\n}\n","import type {Coordinates, UniqueIdentifier} from '../../types';\nimport type {SensorContext} from '../types';\n\nexport enum KeyboardCode {\n  Space = 'Space',\n  Down = 'ArrowDown',\n  Right = 'ArrowRight',\n  Left = 'ArrowLeft',\n  Up = 'ArrowUp',\n  Esc = 'Escape',\n  Enter = 'Enter',\n}\n\nexport type KeyboardCodes = {\n  start: KeyboardEvent['code'][];\n  cancel: KeyboardEvent['code'][];\n  end: KeyboardEvent['code'][];\n};\n\nexport type KeyboardCoordinateGetter = (\n  event: KeyboardEvent,\n  args: {\n    active: UniqueIdentifier;\n    currentCoordinates: Coordinates;\n    context: SensorContext;\n  }\n) => Coordinates | void;\n","import {KeyboardCoordinateGetter, KeyboardCode, KeyboardCodes} from './types';\n\nexport const defaultKeyboardCodes: KeyboardCodes = {\n  start: [KeyboardCode.Space, KeyboardCode.Enter],\n  cancel: [KeyboardCode.Esc],\n  end: [KeyboardCode.Space, KeyboardCode.Enter],\n};\n\nexport const defaultKeyboardCoordinateGetter: KeyboardCoordinateGetter = (\n  event,\n  {currentCoordinates}\n) => {\n  switch (event.code) {\n    case KeyboardCode.Right:\n      return {\n        ...currentCoordinates,\n        x: currentCoordinates.x + 25,\n      };\n    case KeyboardCode.Left:\n      return {\n        ...currentCoordinates,\n        x: currentCoordinates.x - 25,\n      };\n    case KeyboardCode.Down:\n      return {\n        ...currentCoordinates,\n        y: currentCoordinates.y + 25,\n      };\n    case KeyboardCode.Up:\n      return {\n        ...currentCoordinates,\n        y: currentCoordinates.y - 25,\n      };\n  }\n\n  return undefined;\n};\n","import {\n  add as getAdjustedCoordinates,\n  subtract as getCoordinatesDelta,\n} from '@dnd-kit/utilities';\n\nimport {Listeners} from '../utilities';\nimport type {SensorInstance, SensorProps, SensorOptions} from '../types';\nimport type {Coordinates} from '../../types';\n\nimport {KeyboardCoordinateGetter, KeyboardCode, KeyboardCodes} from './types';\nimport {\n  defaultKeyboardCodes,\n  defaultKeyboardCoordinateGetter,\n} from './defaults';\nimport {\n  defaultCoordinates,\n  getBoundingClientRect,\n  getOwnerDocument,\n  getScrollPosition,\n} from '../../utilities';\n\nexport interface KeyboardSensorOptions extends SensorOptions {\n  keyboardCodes?: KeyboardCodes;\n  coordinateGetter?: KeyboardCoordinateGetter;\n  scrollBehavior?: ScrollBehavior;\n}\n\nexport type KeyboardSensorProps = SensorProps<KeyboardSensorOptions>;\n\nexport class KeyboardSensor implements SensorInstance {\n  public autoScrollEnabled = false;\n  private coordinates: Coordinates = defaultCoordinates;\n  private listeners: Listeners;\n\n  constructor(private props: KeyboardSensorProps) {\n    const {\n      event: {target},\n    } = props;\n\n    this.props = props;\n    this.listeners = new Listeners(getOwnerDocument(target));\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n\n    this.attach();\n  }\n\n  private attach() {\n    this.handleStart();\n\n    setTimeout(() => this.listeners.add('keydown', this.handleKeyDown));\n  }\n\n  private handleStart() {\n    const {activeNode, onStart} = this.props;\n\n    if (!activeNode.current) {\n      throw new Error('Active draggable node is undefined');\n    }\n\n    const activeNodeRect = getBoundingClientRect(activeNode.current);\n    const coordinates = {\n      x: activeNodeRect.left,\n      y: activeNodeRect.top,\n    };\n\n    this.coordinates = coordinates;\n\n    onStart(coordinates);\n  }\n\n  private handleKeyDown(event: Event) {\n    if (event instanceof KeyboardEvent) {\n      const {coordinates} = this;\n      const {active, context, options} = this.props;\n      const {\n        keyboardCodes = defaultKeyboardCodes,\n        coordinateGetter = defaultKeyboardCoordinateGetter,\n        scrollBehavior = 'smooth',\n      } = options;\n      const {code} = event;\n\n      if (keyboardCodes.end.includes(code)) {\n        this.handleEnd(event);\n        return;\n      }\n\n      if (keyboardCodes.cancel.includes(code)) {\n        this.handleCancel(event);\n        return;\n      }\n\n      const newCoordinates = coordinateGetter(event, {\n        active,\n        context: context.current,\n        currentCoordinates: coordinates,\n      });\n\n      if (newCoordinates) {\n        const scrollDelta = {\n          x: 0,\n          y: 0,\n        };\n        const {scrollableAncestors} = context.current;\n        const scrollContainer = scrollableAncestors[0];\n\n        if (scrollContainer) {\n          const direction = event.code;\n          const coordinatesDelta = getCoordinatesDelta(\n            newCoordinates,\n            coordinates\n          );\n          const {\n            isTop,\n            isRight,\n            isLeft,\n            isBottom,\n            scrollElementRect,\n            maxScroll,\n            minScroll,\n          } = getScrollPosition(scrollContainer);\n\n          const clampedCoordinates = {\n            x: Math.min(\n              direction === KeyboardCode.Right\n                ? scrollElementRect.right - scrollElementRect.width / 2\n                : scrollElementRect.right,\n              Math.max(\n                direction === KeyboardCode.Right\n                  ? scrollElementRect.left\n                  : scrollElementRect.left + scrollElementRect.width / 2,\n                newCoordinates.x\n              )\n            ),\n            y: Math.min(\n              direction === KeyboardCode.Down\n                ? scrollElementRect.bottom - scrollElementRect.height / 2\n                : scrollElementRect.bottom,\n              Math.max(\n                direction === KeyboardCode.Down\n                  ? scrollElementRect.top\n                  : scrollElementRect.top + scrollElementRect.height / 2,\n                newCoordinates.y\n              )\n            ),\n          };\n\n          const canScrollX =\n            (direction === KeyboardCode.Right && !isRight) ||\n            (direction === KeyboardCode.Left && !isLeft);\n          const canScrollY =\n            (direction === KeyboardCode.Down && !isBottom) ||\n            (direction === KeyboardCode.Up && !isTop);\n\n          if (canScrollX && clampedCoordinates.x !== newCoordinates.x) {\n            const canFullyScrollToNewCoordinates =\n              (direction === KeyboardCode.Right &&\n                scrollContainer.scrollLeft + coordinatesDelta.x <=\n                  maxScroll.x) ||\n              (direction === KeyboardCode.Left &&\n                scrollContainer.scrollLeft + coordinatesDelta.x >= minScroll.x);\n\n            if (canFullyScrollToNewCoordinates) {\n              // We don't need to update coordinates, the scroll adjustment alone will trigger\n              // logic to auto-detect the new container we are over\n              scrollContainer.scrollBy({\n                left: coordinatesDelta.x,\n                behavior: scrollBehavior,\n              });\n              return;\n            }\n\n            scrollDelta.x =\n              direction === KeyboardCode.Right\n                ? scrollContainer.scrollLeft - maxScroll.x\n                : scrollContainer.scrollLeft - minScroll.x;\n\n            scrollContainer.scrollBy({\n              left: -scrollDelta.x,\n              behavior: scrollBehavior,\n            });\n          } else if (canScrollY && clampedCoordinates.y !== newCoordinates.y) {\n            const canFullyScrollToNewCoordinates =\n              (direction === KeyboardCode.Down &&\n                scrollContainer.scrollTop + coordinatesDelta.y <=\n                  maxScroll.y) ||\n              (direction === KeyboardCode.Up &&\n                scrollContainer.scrollTop + coordinatesDelta.y >= minScroll.y);\n\n            if (canFullyScrollToNewCoordinates) {\n              // We don't need to update coordinates, the scroll adjustment alone will trigger\n              // logic to auto-detect the new container we are over\n              scrollContainer.scrollBy({\n                top: coordinatesDelta.y,\n                behavior: scrollBehavior,\n              });\n              return;\n            }\n\n            scrollDelta.y =\n              direction === KeyboardCode.Down\n                ? scrollContainer.scrollTop - maxScroll.y\n                : scrollContainer.scrollTop - minScroll.y;\n\n            scrollContainer.scrollBy({\n              top: -scrollDelta.y,\n              behavior: scrollBehavior,\n            });\n          }\n        }\n\n        this.handleMove(\n          event,\n          getAdjustedCoordinates(newCoordinates, scrollDelta)\n        );\n      }\n    }\n  }\n\n  private handleMove(event: Event, coordinates: Coordinates) {\n    const {onMove} = this.props;\n\n    event.preventDefault();\n    onMove(coordinates);\n    this.coordinates = coordinates;\n  }\n\n  private handleEnd(event: Event) {\n    const {onEnd} = this.props;\n\n    event.preventDefault();\n    this.detach();\n    onEnd();\n  }\n\n  private handleCancel(event: Event) {\n    const {onCancel} = this.props;\n\n    event.preventDefault();\n    this.detach();\n    onCancel();\n  }\n\n  private detach() {\n    this.listeners.removeAll();\n  }\n\n  static activators = [\n    {\n      eventName: 'onKeyDown' as const,\n      handler: (\n        event: React.KeyboardEvent,\n        {keyboardCodes = defaultKeyboardCodes}: KeyboardSensorOptions\n      ) => {\n        const {code} = event.nativeEvent;\n\n        if (keyboardCodes.start.includes(code)) {\n          event.preventDefault();\n\n          return true;\n        }\n\n        return false;\n      },\n    },\n  ];\n}\n","import {subtract as getCoordinatesDelta} from '@dnd-kit/utilities';\n\nimport {getEventListenerTarget, Listeners} from '../utilities';\n\nimport {getEventCoordinates, getOwnerDocument} from '../../utilities';\nimport {KeyboardCode} from '../keyboard';\nimport type {SensorInstance, SensorProps, SensorOptions} from '../types';\nimport type {Coordinates} from '../../types';\n\ninterface DistanceConstraint {\n  distance: number;\n}\n\ninterface DelayConstraint {\n  delay: number;\n  tolerance: number;\n}\n\ninterface EventDescriptor {\n  name: keyof DocumentEventMap;\n  passive?: boolean;\n}\n\nexport interface PointerEventHandlers {\n  move: EventDescriptor;\n  end: EventDescriptor;\n}\n\nexport type PointerActivationConstraint = DistanceConstraint | DelayConstraint;\n\nfunction isDistanceConstraint(\n  constraint: PointerActivationConstraint\n): constraint is DistanceConstraint {\n  return Boolean(constraint && 'distance' in constraint);\n}\n\nfunction isDelayConstraint(\n  constraint: PointerActivationConstraint\n): constraint is DelayConstraint {\n  return Boolean(constraint && 'delay' in constraint);\n}\n\nexport interface PointerSensorOptions extends SensorOptions {\n  activationConstraint?: PointerActivationConstraint;\n}\n\nexport type PointerSensorProps = SensorProps<PointerSensorOptions>;\n\nenum EventName {\n  Keydown = 'keydown',\n}\n\nexport class AbstractPointerSensor implements SensorInstance {\n  public autoScrollEnabled = true;\n  private activated: boolean = false;\n  private initialCoordinates: Coordinates;\n  private timeoutId: NodeJS.Timeout | null = null;\n  private listeners: Listeners;\n  private ownerDocument: Document;\n\n  constructor(\n    private props: PointerSensorProps,\n    private events: PointerEventHandlers,\n    listenerTarget = getEventListenerTarget(props.event.target)\n  ) {\n    const {event} = props;\n\n    this.props = props;\n    this.events = events;\n    this.ownerDocument = getOwnerDocument(event.target);\n    this.listeners = new Listeners(listenerTarget);\n    this.initialCoordinates = getEventCoordinates(event);\n    this.handleStart = this.handleStart.bind(this);\n    this.handleMove = this.handleMove.bind(this);\n    this.handleEnd = this.handleEnd.bind(this);\n    this.handleKeydown = this.handleKeydown.bind(this);\n\n    this.attach();\n  }\n\n  private attach() {\n    const {\n      events,\n      props: {\n        options: {activationConstraint},\n      },\n    } = this;\n\n    this.listeners.add(events.move.name, this.handleMove, false);\n    this.listeners.add(events.end.name, this.handleEnd);\n\n    this.ownerDocument.addEventListener(EventName.Keydown, this.handleKeydown);\n\n    if (activationConstraint) {\n      if (isDistanceConstraint(activationConstraint)) {\n        return;\n      }\n\n      if (isDelayConstraint(activationConstraint)) {\n        this.timeoutId = setTimeout(\n          this.handleStart,\n          activationConstraint.delay\n        );\n        return;\n      }\n    }\n\n    this.handleStart();\n  }\n\n  private detach() {\n    this.listeners.removeAll();\n    this.ownerDocument.removeEventListener(\n      EventName.Keydown,\n      this.handleKeydown\n    );\n\n    if (this.timeoutId !== null) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n  }\n\n  private handleStart() {\n    const {initialCoordinates} = this;\n    const {onStart} = this.props;\n\n    if (initialCoordinates) {\n      this.activated = true;\n\n      onStart(initialCoordinates);\n    }\n  }\n\n  private handleMove(event: Event) {\n    const {activated, initialCoordinates, props} = this;\n    const {\n      onMove,\n      options: {activationConstraint},\n    } = props;\n\n    if (!initialCoordinates) {\n      return;\n    }\n\n    const coordinates = getEventCoordinates(event);\n    const delta = getCoordinatesDelta(initialCoordinates, coordinates);\n    const combinedDelta = Math.abs(delta.x) + Math.abs(delta.y);\n\n    if (!activated && activationConstraint) {\n      // Constraint validation\n      if (isDelayConstraint(activationConstraint)) {\n        if (combinedDelta >= activationConstraint.tolerance) {\n          return this.handleCancel();\n        }\n\n        return;\n      }\n\n      if (isDistanceConstraint(activationConstraint)) {\n        if (combinedDelta >= activationConstraint.distance) {\n          return this.handleStart();\n        }\n\n        return;\n      }\n    }\n\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n\n    onMove(coordinates);\n  }\n\n  private handleEnd() {\n    const {onEnd} = this.props;\n\n    this.detach();\n    onEnd();\n  }\n\n  private handleCancel() {\n    const {onCancel} = this.props;\n\n    this.detach();\n    onCancel();\n  }\n\n  private handleKeydown(event: KeyboardEvent) {\n    if (event.code === KeyboardCode.Esc) {\n      this.handleCancel();\n    }\n  }\n}\n","import {getOwnerDocument} from '../../utilities';\n\nimport {\n  AbstractPointerSensor,\n  PointerSensorProps,\n  PointerEventHandlers,\n} from './AbstractPointerSensor';\n\nconst events: PointerEventHandlers = {\n  move: {name: 'pointermove'},\n  end: {name: 'pointerup'},\n};\n\nexport class PointerSensor extends AbstractPointerSensor {\n  constructor(props: PointerSensorProps) {\n    const {event} = props;\n    // Pointer events stop firing if the target is unmounted while dragging\n    // Therefore we attach listeners to the owner document instead\n    const listenerTarget = getOwnerDocument(event.target);\n\n    super(props, events, listenerTarget);\n  }\n\n  static activators = [\n    {\n      eventName: 'onPointerDown' as const,\n      handler: ({nativeEvent}: React.PointerEvent) => {\n        if (!nativeEvent.isPrimary || nativeEvent.button !== 0) {\n          return false;\n        }\n\n        nativeEvent.preventDefault();\n\n        return true;\n      },\n    },\n  ];\n}\n","import {getOwnerDocument} from '../../utilities';\nimport {\n  AbstractPointerSensor,\n  PointerEventHandlers,\n  PointerSensorOptions,\n  PointerSensorProps,\n} from '../pointer';\n\nconst events: PointerEventHandlers = {\n  move: {name: 'mousemove'},\n  end: {name: 'mouseup'},\n};\n\nenum MouseButton {\n  RightClick = 2,\n}\n\nexport interface MouseSensorOptions extends PointerSensorOptions {}\n\nexport class MouseSensor extends AbstractPointerSensor {\n  constructor(props: PointerSensorProps) {\n    super(props, events, getOwnerDocument(props.event.target));\n  }\n\n  static activators = [\n    {\n      eventName: 'onMouseDown' as const,\n      handler: ({nativeEvent}: React.MouseEvent) => {\n        if (nativeEvent.button === MouseButton.RightClick) {\n          return false;\n        }\n\n        nativeEvent.preventDefault();\n\n        return true;\n      },\n    },\n  ];\n}\n","import React from 'react';\n\nimport {\n  AbstractPointerSensor,\n  PointerSensorProps,\n  PointerEventHandlers,\n  PointerSensorOptions,\n} from '../pointer';\n\nconst events: PointerEventHandlers = {\n  move: {name: 'touchmove'},\n  end: {name: 'touchend'},\n};\n\nexport interface TouchSensorOptions extends PointerSensorOptions {}\n\nexport class TouchSensor extends AbstractPointerSensor {\n  constructor(props: PointerSensorProps) {\n    super(props, events);\n  }\n\n  static activators = [\n    {\n      eventName: 'onTouchStart' as const,\n      handler: ({nativeEvent}: React.TouchEvent) => {\n        const {touches} = nativeEvent;\n\n        if (touches.length > 1) {\n          return false;\n        }\n\n        if (nativeEvent.cancelable) {\n          nativeEvent.preventDefault();\n        }\n\n        return true;\n      },\n    },\n  ];\n}\n","import type {FirstArgument, Transform} from '@dnd-kit/utilities';\n\nimport type {Modifiers, Modifier} from './types';\n\nexport function applyModifiers(\n  modifiers: Modifiers | undefined,\n  {transform, ...args}: FirstArgument<Modifier>\n): Transform {\n  return modifiers?.length\n    ? modifiers.reduce<Transform>((accumulator, modifier) => {\n        return modifier({\n          transform: accumulator,\n          ...args,\n        });\n      }, transform)\n    : transform;\n}\n","import React, {\n  memo,\n  createContext,\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  add,\n  Transform,\n  useIsomorphicLayoutEffect,\n  useNodeRef,\n  useUniqueId,\n} from '@dnd-kit/utilities';\n\nimport {\n  Action,\n  Context,\n  DndContextDescriptor,\n  getInitialState,\n  reducer,\n} from '../../store';\nimport type {Coordinates, ViewRect, LayoutRect, Translate} from '../../types';\nimport {\n  useAutoScroller,\n  useCachedNode,\n  useCombineActivators,\n  useLayoutRectMap,\n  useScrollableAncestors,\n  useClientRect,\n  useClientRects,\n  useScrollOffsets,\n  useViewRect,\n  SyntheticListener,\n} from '../../hooks/utilities';\nimport {\n  KeyboardSensor,\n  PointerSensor,\n  Sensor,\n  SensorContext,\n  SensorDescriptor,\n  SensorHandler,\n  SensorInstance,\n} from '../../sensors';\nimport {\n  adjustScale,\n  CollisionDetection,\n  defaultCoordinates,\n  getAdjustedRect,\n  getRectDelta,\n  rectIntersection,\n} from '../../utilities';\nimport {applyModifiers, Modifiers} from '../../modifiers';\nimport type {\n  LayoutRectMap,\n  DraggableNode,\n  DraggableNodes,\n  DroppableContainers,\n} from '../../store/types';\nimport type {UniqueIdentifier} from '../../types';\nimport {\n  Accessibility,\n  Announcements,\n  screenReaderInstructions as defaultScreenReaderInstructions,\n  ScreenReaderInstructions,\n} from '../Accessibility';\n\ninterface Active {\n  id: UniqueIdentifier;\n}\n\nexport interface DragStartEvent {\n  active: Active;\n}\n\nexport interface DragMoveEvent {\n  active: Active;\n  delta: Translate;\n  draggingRect: ViewRect;\n  droppableRects: LayoutRectMap;\n  over: {\n    id: UniqueIdentifier;\n    rect: LayoutRect;\n  } | null;\n}\n\nexport interface DragOverEvent {\n  active: Active;\n  draggingRect: ViewRect;\n  droppableRects: LayoutRectMap;\n  over: {\n    id: UniqueIdentifier;\n    rect: LayoutRect;\n  } | null;\n}\n\nexport interface DragEndEvent {\n  active: Active;\n  delta: Translate;\n  over: {\n    id: UniqueIdentifier;\n  } | null;\n}\n\nexport type DragCancelEvent = DragEndEvent;\n\ninterface DndEvent extends Event {\n  dndKit?: {\n    capturedBy: Sensor<any>;\n  };\n}\n\ninterface Props {\n  autoScroll?: boolean;\n  announcements?: Announcements;\n  children?: React.ReactNode;\n  collisionDetection?: CollisionDetection;\n  screenReaderInstructions?: ScreenReaderInstructions;\n  sensors?: SensorDescriptor<any>[];\n  modifiers?: Modifiers;\n  onDragStart?(event: DragStartEvent): void;\n  onDragMove?(event: DragMoveEvent): void;\n  onDragOver?(event: DragOverEvent): void;\n  onDragEnd?(event: DragEndEvent): void;\n  onDragCancel?(event: DragCancelEvent): void;\n}\n\nconst defaultSensors = [\n  {sensor: PointerSensor, options: {}},\n  {sensor: KeyboardSensor, options: {}},\n];\n\nexport const ActiveDraggableContext = createContext<Transform>({\n  ...defaultCoordinates,\n  scaleX: 1,\n  scaleY: 1,\n});\n\nexport const DndContext = memo(function DndContext({\n  autoScroll = true,\n  announcements,\n  children,\n  sensors = defaultSensors,\n  collisionDetection = rectIntersection,\n  screenReaderInstructions = defaultScreenReaderInstructions,\n  modifiers,\n  ...props\n}: Props) {\n  const store = useReducer(reducer, undefined, getInitialState);\n  const [state, dispatch] = store;\n  const {\n    draggable: {active, lastEvent, nodes: draggableNodes, translate},\n    droppable: {containers: droppableContainers},\n  } = state;\n  const activeRef = useRef<UniqueIdentifier | null>(null);\n  const [activeSensor, setActiveSensor] = useState<SensorInstance | null>(null);\n  const [activatorEvent, setActivatorEvent] = useState<Event | null>(null);\n  const latestProps = useRef(props);\n  const draggableDescribedById = useUniqueId(`DndDescribedBy`);\n\n  const {\n    layoutRectMap: droppableRects,\n    recomputeLayouts,\n    willRecomputeLayouts,\n  } = useLayoutRectMap(droppableContainers, active === null);\n  const activeNode = useCachedNode(\n    getDraggableNode(active, draggableNodes),\n    active\n  );\n  const activeNodeRect = useViewRect(activeNode);\n  const activeNodeClientRect = useClientRect(activeNode);\n  const initialActiveNodeRectRef = useRef<ViewRect | null>(null);\n  const initialActiveNodeRect = initialActiveNodeRectRef.current;\n  const nodeRectDelta = getRectDelta(activeNodeRect, initialActiveNodeRect);\n  const tracked = useRef<{\n    active: UniqueIdentifier | null;\n    droppableRects: LayoutRectMap;\n    overId: UniqueIdentifier | null;\n    scrollAdjustedTransalte: Coordinates;\n    translatedRect: ViewRect | null;\n  }>({\n    active,\n    droppableRects,\n    overId: null,\n    scrollAdjustedTransalte: defaultCoordinates,\n    translatedRect: null,\n  });\n  const overNode = getDroppableNode(\n    tracked.current.overId,\n    droppableContainers\n  );\n  const windowRect = useClientRect(\n    activeNode ? activeNode.ownerDocument.defaultView : null\n  );\n  const containerNodeRect = useClientRect(\n    activeNode ? activeNode.parentElement : null\n  );\n  const scrollableAncestors = useScrollableAncestors(\n    active ? overNode ?? activeNode : null\n  );\n  const scrollableAncestorRects = useClientRects(scrollableAncestors);\n\n  const [overlayNodeRef, setOverlayNodeRef] = useNodeRef();\n  const overlayNodeRect = useClientRect(\n    active ? overlayNodeRef.current : null,\n    willRecomputeLayouts\n  );\n\n  const modifiedTranslate = applyModifiers(modifiers, {\n    transform: {\n      x: translate.x - nodeRectDelta.x,\n      y: translate.y - nodeRectDelta.y,\n      scaleX: 1,\n      scaleY: 1,\n    },\n    activeNodeRect: activeNodeClientRect,\n    draggingNodeRect: overlayNodeRect ?? activeNodeClientRect,\n    containerNodeRect,\n    overlayNodeRect,\n    scrollableAncestors,\n    scrollableAncestorRects,\n    windowRect,\n  });\n\n  const scrolllAdjustment = useScrollOffsets(scrollableAncestors);\n\n  const scrollAdjustedTransalte = add(modifiedTranslate, scrolllAdjustment);\n\n  const translatedRect = activeNodeRect\n    ? getAdjustedRect(activeNodeRect, modifiedTranslate)\n    : null;\n\n  const collisionRect = translatedRect\n    ? getAdjustedRect(translatedRect, scrolllAdjustment)\n    : null;\n\n  const overId =\n    active && collisionRect\n      ? collisionDetection(Array.from(droppableRects.entries()), collisionRect)\n      : null;\n  const overNodeRect = getLayoutRect(overId, droppableRects);\n  const over = useMemo(\n    () =>\n      overId && overNodeRect\n        ? {\n            id: overId,\n            rect: overNodeRect,\n          }\n        : null,\n    [overId, overNodeRect]\n  );\n\n  const transform = adjustScale(\n    modifiedTranslate,\n    overNodeRect,\n    activeNodeRect\n  );\n\n  const sensorContext = useRef<SensorContext>({\n    activeNode,\n    collisionRect,\n    droppableRects,\n    droppableContainers,\n    over,\n    scrollableAncestors,\n    translatedRect,\n  });\n\n  const instantiateSensor = useCallback(\n    (\n      event: React.SyntheticEvent,\n      {sensor: Sensor, options}: SensorDescriptor<any>\n    ) => {\n      if (!activeRef.current) {\n        return;\n      }\n\n      const activeNode = draggableNodes[activeRef.current];\n\n      if (!activeNode) {\n        return;\n      }\n\n      const sensorInstance = new Sensor({\n        active: activeRef.current,\n        activeNode,\n        event: event.nativeEvent,\n        options,\n        // Sensors need to be instantiated with refs for arguments that change over time\n        // otherwise they are frozen in time with the stale arguments\n        context: sensorContext,\n        onStart: (initialCoordinates) => {\n          const id = activeRef.current;\n\n          if (!id) {\n            return;\n          }\n\n          const {onDragStart} = latestProps.current;\n\n          dispatch({\n            type: Action.DragStart,\n            initialCoordinates,\n            active: id,\n          });\n\n          onDragStart?.({active: {id}});\n        },\n        onMove(coordinates) {\n          dispatch({\n            type: Action.DragMove,\n            coordinates,\n          });\n        },\n        onEnd: createHandler(Action.DragEnd),\n        onCancel: createHandler(Action.DragCancel),\n      });\n\n      setActiveSensor(sensorInstance);\n      setActivatorEvent(event.nativeEvent);\n\n      function createHandler(type: Action.DragEnd | Action.DragCancel) {\n        return function handler() {\n          const {overId, scrollAdjustedTransalte} = tracked.current;\n          const props = latestProps.current;\n          const activeId = activeRef.current;\n\n          if (activeId) {\n            activeRef.current = null;\n          }\n\n          dispatch({type});\n          setActiveSensor(null);\n          setActivatorEvent(null);\n\n          const handler =\n            type === Action.DragEnd ? props.onDragEnd : props.onDragCancel;\n\n          if (activeId) {\n            handler?.({\n              active: {\n                id: activeId,\n              },\n              delta: scrollAdjustedTransalte,\n              over: overId\n                ? {\n                    id: overId,\n                  }\n                : null,\n            });\n          }\n        };\n      }\n    },\n    [dispatch, draggableNodes]\n  );\n\n  const bindActivatorToSensorInstantiator = useCallback(\n    (\n      handler: SensorHandler,\n      sensor: SensorDescriptor<any>\n    ): SyntheticListener['handler'] => {\n      return (event, active) => {\n        const nativeEvent = event.nativeEvent as DndEvent;\n\n        if (\n          // No active draggable\n          activeRef.current !== null ||\n          // Event has already been captured\n          nativeEvent.dndKit ||\n          nativeEvent.defaultPrevented\n        ) {\n          return;\n        }\n\n        if (handler(event, sensor.options) === true) {\n          nativeEvent.dndKit = {\n            capturedBy: sensor.sensor,\n          };\n\n          activeRef.current = active;\n          instantiateSensor(event, sensor);\n        }\n      };\n    },\n    [instantiateSensor]\n  );\n\n  const activators = useCombineActivators(\n    sensors,\n    bindActivatorToSensorInstantiator\n  );\n\n  useIsomorphicLayoutEffect(\n    () => {\n      latestProps.current = props;\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    Object.values(props)\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    if (!active) {\n      return;\n    }\n\n    // Recompute rects right after dragging has begun in case they have changed\n    recomputeLayouts();\n  }, [active, recomputeLayouts]);\n\n  useEffect(() => {\n    if (!active) {\n      initialActiveNodeRectRef.current = null;\n    }\n\n    if (active && activeNodeRect && !initialActiveNodeRectRef.current) {\n      initialActiveNodeRectRef.current = activeNodeRect;\n    }\n  }, [activeNodeRect, active]);\n\n  useEffect(() => {\n    const activeId = activeRef.current;\n\n    if (!activeId) {\n      return;\n    }\n\n    const {onDragMove} = latestProps.current;\n    const {overId, droppableRects, translatedRect} = tracked.current;\n\n    if (!onDragMove || !translatedRect) {\n      return;\n    }\n    const overNodeRect = getLayoutRect(overId, droppableRects);\n\n    onDragMove({\n      active: {\n        id: activeId,\n      },\n      draggingRect: translatedRect,\n      droppableRects,\n      delta: {\n        x: scrollAdjustedTransalte.x,\n        y: scrollAdjustedTransalte.y,\n      },\n      over:\n        overId && overNodeRect\n          ? {\n              id: overId,\n              rect: overNodeRect,\n            }\n          : null,\n    });\n  }, [scrollAdjustedTransalte.x, scrollAdjustedTransalte.y]);\n\n  useEffect(() => {\n    if (!activeRef.current) {\n      return;\n    }\n\n    const {active, droppableRects, translatedRect} = tracked.current;\n\n    if (!active || !translatedRect) {\n      return;\n    }\n\n    const {onDragOver} = latestProps.current;\n    const overNodeRect = getLayoutRect(overId, droppableRects);\n\n    onDragOver?.({\n      active: {\n        id: active,\n      },\n      droppableRects: tracked.current.droppableRects,\n      draggingRect: translatedRect,\n      over:\n        overId && overNodeRect\n          ? {\n              id: overId,\n              rect: overNodeRect,\n            }\n          : null,\n    });\n  }, [overId]);\n\n  useEffect(() => {\n    tracked.current = {\n      active,\n      droppableRects,\n      overId,\n      translatedRect,\n      scrollAdjustedTransalte,\n    };\n  }, [active, droppableRects, overId, translatedRect, scrollAdjustedTransalte]);\n\n  useIsomorphicLayoutEffect(() => {\n    sensorContext.current = {\n      activeNode,\n      collisionRect,\n      droppableRects,\n      droppableContainers,\n      over,\n      scrollableAncestors,\n      translatedRect,\n    };\n  }, [\n    activeNode,\n    collisionRect,\n    droppableRects,\n    droppableContainers,\n    over,\n    scrollableAncestors,\n    translatedRect,\n  ]);\n\n  useAutoScroller({\n    draggingRect: translatedRect,\n    disabled: !autoScroll || !activeSensor?.autoScrollEnabled,\n    scrollableAncestors,\n    scrollableAncestorRects,\n  });\n\n  const contextValue = useMemo(() => {\n    const memoizedContext: DndContextDescriptor = {\n      active,\n      activeNode,\n      activeNodeRect,\n      activeNodeClientRect,\n      activatorEvent,\n      activators,\n      ariaDescribedById: {\n        draggable: draggableDescribedById,\n      },\n      overlayNode: {\n        nodeRef: overlayNodeRef,\n        rect: overlayNodeRect,\n        setRef: setOverlayNodeRef,\n      },\n      containerNodeRect,\n      dispatch,\n      draggableNodes,\n      droppableContainers,\n      droppableRects,\n      over,\n      recomputeLayouts,\n      scrollableAncestors,\n      scrollableAncestorRects,\n      willRecomputeLayouts,\n      windowRect,\n    };\n\n    return memoizedContext;\n  }, [\n    active,\n    activeNode,\n    activeNodeClientRect,\n    activeNodeRect,\n    activatorEvent,\n    activators,\n    containerNodeRect,\n    overlayNodeRect,\n    overlayNodeRef,\n    dispatch,\n    draggableNodes,\n    draggableDescribedById,\n    droppableContainers,\n    droppableRects,\n    over,\n    recomputeLayouts,\n    scrollableAncestors,\n    scrollableAncestorRects,\n    setOverlayNodeRef,\n    willRecomputeLayouts,\n    windowRect,\n  ]);\n\n  return (\n    <>\n      <Context.Provider value={contextValue}>\n        <ActiveDraggableContext.Provider value={transform}>\n          {children}\n        </ActiveDraggableContext.Provider>\n      </Context.Provider>\n      <Accessibility\n        announcements={announcements}\n        activeId={active}\n        overId={overId}\n        lastEvent={lastEvent}\n        hiddenTextDescribedById={draggableDescribedById}\n        screenReaderInstructions={screenReaderInstructions}\n      />\n    </>\n  );\n});\n\nfunction getDroppableNode(\n  id: UniqueIdentifier | null,\n  droppableContainers: DroppableContainers\n): HTMLElement | null {\n  return id ? droppableContainers[id]?.node.current ?? null : null;\n}\n\nfunction getDraggableNode(\n  id: UniqueIdentifier | null,\n  droppableContainers: DraggableNodes\n): DraggableNode | null {\n  return id ? droppableContainers[id] ?? null : null;\n}\n\nfunction getLayoutRect(\n  id: UniqueIdentifier | null,\n  layoutRectMap: LayoutRectMap\n): LayoutRect | null {\n  return id ? layoutRectMap.get(id) ?? null : null;\n}\n","import {createContext, useContext, useEffect} from 'react';\nimport {Transform, useNodeRef} from '@dnd-kit/utilities';\n\nimport {Context} from '../store';\nimport {ActiveDraggableContext} from '../components/DndContext';\nimport {useSyntheticListeners, SyntheticListenerMap} from './utilities';\n\nexport interface UseDraggableArguments {\n  id: string;\n  disabled?: boolean;\n  attributes?: {\n    role?: string;\n    roleDescription?: string;\n    tabIndex?: number;\n  };\n}\n\nexport type DraggableSyntheticListeners = SyntheticListenerMap | undefined;\n\nconst NullContext = createContext<any>(null);\n\nconst defaultRole = 'button';\n\nexport function useDraggable({\n  id,\n  disabled = false,\n  attributes,\n}: UseDraggableArguments) {\n  const {\n    active,\n    activeNodeRect,\n    activatorEvent,\n    ariaDescribedById,\n    draggableNodes,\n    droppableRects,\n    activators,\n    over,\n  } = useContext(Context);\n  const {role = defaultRole, roleDescription = 'draggable', tabIndex = 0} =\n    attributes ?? {};\n  const isDragging = Boolean(active === id);\n  const transform: Transform | null = useContext(\n    isDragging ? ActiveDraggableContext : NullContext\n  );\n  const [node, setNodeRef] = useNodeRef();\n  const listeners = useSyntheticListeners(activators, id);\n\n  useEffect(\n    () => {\n      draggableNodes[id] = node;\n\n      return () => {\n        delete draggableNodes[id];\n      };\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [draggableNodes, id]\n  );\n\n  return {\n    active,\n    activeNodeRect,\n    activatorEvent,\n    attributes: {\n      role,\n      tabIndex,\n      'aria-pressed': isDragging && role === defaultRole ? true : undefined,\n      'aria-roledescription': roleDescription,\n      'aria-describedby': ariaDescribedById.draggable,\n    },\n    droppableRects,\n    isDragging,\n    listeners: disabled ? undefined : listeners,\n    node,\n    over,\n    setNodeRef,\n    transform,\n  };\n}\n","import {ContextType, useContext} from 'react';\nimport {Context} from '../store';\n\nexport function useDndContext() {\n  return useContext(Context);\n}\n\nexport type UseDndContextReturnValue = ContextType<typeof Context>;\n","import {useContext, useEffect, useRef} from 'react';\nimport {useIsomorphicLayoutEffect, useNodeRef} from '@dnd-kit/utilities';\n\nimport {Context, Action, Data} from '../store';\nimport type {LayoutRect} from '../types';\n\nexport interface UseDroppableArguments {\n  id: string;\n  disabled?: boolean;\n  data?: Data;\n}\n\nconst defaultData: Data = {};\n\nexport function useDroppable({\n  data = defaultData,\n  disabled = false,\n  id,\n}: UseDroppableArguments) {\n  const {dispatch, over} = useContext(Context);\n  const rect = useRef<LayoutRect | null>(null);\n  const [nodeRef, setNodeRef] = useNodeRef();\n  const dataRef = useRef(data);\n\n  useIsomorphicLayoutEffect(() => {\n    if (dataRef.current !== data) {\n      dataRef.current = data;\n    }\n  }, [data]);\n\n  useIsomorphicLayoutEffect(\n    () => {\n      dispatch({\n        type: Action.RegisterDroppable,\n        element: {\n          id,\n          disabled,\n          node: nodeRef,\n          rect,\n          data: dataRef,\n        },\n      });\n\n      return () =>\n        dispatch({\n          type: Action.UnregisterDroppable,\n          id,\n        });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [id]\n  );\n\n  useEffect(\n    () => {\n      dispatch({\n        type: Action.SetDroppableDisabled,\n        id,\n        disabled,\n      });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [disabled]\n  );\n\n  return {\n    rect,\n    isOver: over?.id === id,\n    node: nodeRef,\n    over,\n    setNodeRef,\n  };\n}\n","import {useRef} from 'react';\nimport {Transform, useLazyMemo} from '@dnd-kit/utilities';\n\nimport type {ViewRect} from '../../../types';\n\nexport function useDerivedTransform(\n  transform: Transform,\n  rect: ViewRect | null,\n  overlayNode: HTMLElement | null\n) {\n  const prevRect = useRef(rect);\n\n  return useLazyMemo<Transform | undefined>(\n    (previousValue) => {\n      const initial = prevRect.current;\n\n      if (rect !== initial) {\n        if (rect && initial) {\n          const layoutHasChanged =\n            initial.left !== rect.left || initial.top !== rect.top;\n\n          if (layoutHasChanged && !previousValue) {\n            const overlayNodeRect = overlayNode?.getBoundingClientRect();\n\n            if (overlayNodeRect) {\n              const delta = {\n                ...transform,\n                x: overlayNodeRect.left - rect.left,\n                y: overlayNodeRect.top - rect.top,\n              };\n\n              return delta;\n            }\n          }\n        }\n\n        prevRect.current = rect;\n      }\n\n      return undefined;\n    },\n    [rect, transform, overlayNode]\n  );\n}\n","import {useEffect, useState} from 'react';\nimport {CSS, Transform, useIsomorphicLayoutEffect} from '@dnd-kit/utilities';\n\nimport {UniqueIdentifier} from '../../../types';\nimport {DraggableNodes} from '../../../store';\nimport {getViewRect} from '../../../utilities';\n\nexport interface DropAnimation {\n  duration: number;\n  easing: string;\n}\n\ninterface Arguments {\n  activeId: UniqueIdentifier | null;\n  animate: boolean;\n  adjustScale: boolean;\n  draggableNodes: DraggableNodes;\n  duration: DropAnimation['duration'] | undefined;\n  easing: DropAnimation['easing'] | undefined;\n  node: HTMLElement | null;\n  transform: Transform | undefined;\n}\n\nexport function useDropAnimation({\n  animate,\n  adjustScale,\n  activeId,\n  draggableNodes,\n  duration,\n  easing,\n  node,\n  transform,\n}: Arguments) {\n  const [dropAnimationComplete, setDropAnimationComplete] = useState(false);\n\n  useEffect(() => {\n    const shouldPerformDropAnimation = transform\n      ? Boolean(Math.abs(transform.x) || Math.abs(transform.y))\n      : false;\n\n    if (\n      !animate ||\n      !activeId ||\n      !easing ||\n      !duration ||\n      !shouldPerformDropAnimation\n    ) {\n      if (animate) {\n        setDropAnimationComplete(true);\n      }\n\n      return;\n    }\n\n    requestAnimationFrame(() => {\n      const finalNode = draggableNodes[activeId]?.current;\n\n      if (transform && node && finalNode && finalNode.parentNode !== null) {\n        const fromNode = node.children.length > 1 ? node : node.children[0];\n\n        if (fromNode) {\n          const from = fromNode.getBoundingClientRect();\n          const to = getViewRect(finalNode);\n          const delta = {\n            x: from.left - to.left,\n            y: from.top - to.top,\n          };\n\n          if (Math.abs(delta.x) || Math.abs(delta.y)) {\n            const scaleDelta = {\n              scaleX: adjustScale\n                ? (to.width * transform.scaleX) / from.width\n                : 1,\n              scaleY: adjustScale\n                ? (to.height * transform.scaleY) / from.height\n                : 1,\n            };\n            const finalTransform = CSS.Transform.toString({\n              x: transform.x - delta.x,\n              y: transform.y - delta.y,\n              ...scaleDelta,\n            });\n            const originalOpacity = finalNode.style.opacity;\n\n            finalNode.style.opacity = '0';\n            node\n              .animate(\n                [\n                  {\n                    transform: CSS.Transform.toString(transform),\n                  },\n                  {\n                    transform: finalTransform,\n                  },\n                ],\n                {\n                  easing,\n                  duration,\n                }\n              )\n              .finished.then(() => {\n                setDropAnimationComplete(true);\n\n                if (finalNode) {\n                  finalNode.style.opacity = originalOpacity;\n                }\n              });\n            return;\n          }\n        }\n      }\n\n      setDropAnimationComplete(true);\n    });\n  }, [\n    animate,\n    activeId,\n    adjustScale,\n    draggableNodes,\n    duration,\n    easing,\n    node,\n    transform,\n  ]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (dropAnimationComplete) {\n      setDropAnimationComplete(false);\n    }\n  }, [dropAnimationComplete]);\n\n  return dropAnimationComplete;\n}\n","import React, {useContext, useEffect, useRef} from 'react';\nimport {CSS} from '@dnd-kit/utilities';\n\nimport {getRelativeTransformOrigin} from '../../utilities';\nimport {applyModifiers, Modifiers} from '../../modifiers';\nimport {ActiveDraggableContext} from '../DndContext';\nimport {useDndContext} from '../../hooks';\nimport {useDerivedTransform, useDropAnimation, DropAnimation} from './hooks';\n\ntype TransitionGetter = (\n  activatorEvent: Event | null\n) => React.CSSProperties['transition'] | undefined;\n\nexport interface Props {\n  adjustScale?: boolean;\n  children?: React.ReactNode;\n  className?: string;\n  dropAnimation?: DropAnimation | null | undefined;\n  style?: React.CSSProperties;\n  transition?: string | TransitionGetter;\n  modifiers?: Modifiers;\n  wrapperElement?: keyof JSX.IntrinsicElements;\n  zIndex?: number;\n}\n\nconst defaultTransition: TransitionGetter = (activatorEvent) => {\n  const isKeyboardActivator = activatorEvent instanceof KeyboardEvent;\n\n  return isKeyboardActivator ? 'transform 250ms ease' : undefined;\n};\n\nconst defaultDropAnimation: DropAnimation = {\n  duration: 250,\n  easing: 'ease',\n};\n\nexport const DragOverlay = React.memo(\n  ({\n    adjustScale = false,\n    children,\n    dropAnimation = defaultDropAnimation,\n    transition = defaultTransition,\n    modifiers,\n    wrapperElement = 'div',\n    className,\n    zIndex = 999,\n  }: Props) => {\n    const {\n      active,\n      activeNodeRect,\n      activeNodeClientRect,\n      containerNodeRect,\n      draggableNodes,\n      activatorEvent,\n      overlayNode,\n      scrollableAncestors,\n      scrollableAncestorRects,\n      windowRect,\n    } = useDndContext();\n    const transform = useContext(ActiveDraggableContext);\n    const modifiedTransform = applyModifiers(modifiers, {\n      transform,\n      activeNodeRect: activeNodeClientRect,\n      overlayNodeRect: overlayNode.rect,\n      draggingNodeRect: overlayNode.rect,\n      containerNodeRect,\n      scrollableAncestors,\n      scrollableAncestorRects,\n      windowRect,\n    });\n    const derivedTransform = useDerivedTransform(\n      modifiedTransform,\n      activeNodeRect,\n      overlayNode.nodeRef.current\n    );\n    const isDragging = active !== null;\n    const intermediateTransform = derivedTransform ?? modifiedTransform;\n    const finalTransform = adjustScale\n      ? intermediateTransform\n      : {\n          ...intermediateTransform,\n          scaleX: 1,\n          scaleY: 1,\n        };\n    const style: React.CSSProperties | undefined = activeNodeRect\n      ? {\n          position: 'fixed',\n          width: activeNodeRect.width,\n          height: activeNodeRect.height,\n          top: activeNodeRect.top,\n          left: activeNodeRect.left,\n          zIndex,\n          transform: CSS.Transform.toString(finalTransform),\n          touchAction: 'none',\n          transformOrigin:\n            adjustScale && activatorEvent\n              ? getRelativeTransformOrigin(\n                  activatorEvent as MouseEvent | KeyboardEvent | TouchEvent,\n                  activeNodeRect\n                )\n              : undefined,\n          transition: derivedTransform\n            ? undefined\n            : typeof transition === 'function'\n            ? transition(activatorEvent)\n            : transition,\n        }\n      : undefined;\n    const attributes = isDragging\n      ? {\n          style,\n          children,\n          className,\n          transform: finalTransform,\n        }\n      : undefined;\n    const attributesSnapshot = useRef(attributes);\n    const derivedAttributes = attributes ?? attributesSnapshot.current;\n    const {children: finalChildren, transform: _, ...otherAttributes} =\n      derivedAttributes ?? {};\n    const prevActive = useRef(active);\n    const dropAnimationComplete = useDropAnimation({\n      animate: Boolean(dropAnimation && prevActive.current && !active),\n      adjustScale,\n      activeId: prevActive.current,\n      draggableNodes,\n      duration: dropAnimation?.duration,\n      easing: dropAnimation?.easing,\n      node: overlayNode.nodeRef.current,\n      transform: attributesSnapshot.current?.transform,\n    });\n    const shouldRender = Boolean(\n      finalChildren && (children || (dropAnimation && !dropAnimationComplete))\n    );\n\n    useEffect(() => {\n      if (prevActive.current !== active) {\n        prevActive.current = active;\n      }\n\n      if (active && attributesSnapshot.current !== attributes) {\n        attributesSnapshot.current = attributes;\n      }\n    }, [active, attributes]);\n\n    useEffect(() => {\n      if (dropAnimationComplete) {\n        attributesSnapshot.current = undefined;\n      }\n    }, [dropAnimationComplete]);\n\n    if (!shouldRender) {\n      return null;\n    }\n\n    return React.createElement(\n      wrapperElement,\n      {\n        ...otherAttributes,\n        ref: overlayNode.setRef,\n      },\n      finalChildren\n    );\n  }\n);\n"],"names":["screenReaderInstructions","draggable","defaultAnnouncements","onDragStart","id","onDragOver","overId","onDragEnd","onDragCancel","Action","getMaxValueIndex","array","getValueIndex","value","tracked","getMinValueIndex","comparator","length","index","i","noop","omit","elements","other","Context","createContext","activatorEvent","active","activeNode","activeNodeRect","activeNodeClientRect","activators","ariaDescribedById","overlayNode","nodeRef","current","rect","setRef","containerNodeRect","dispatch","draggableNodes","droppableRects","Map","droppableContainers","over","scrollableAncestors","scrollableAncestorRects","recomputeLayouts","windowRect","willRecomputeLayouts","defaultCoordinates","Object","freeze","x","y","distanceBetween","p1","p2","Math","sqrt","pow","isTouchEvent","event","window","TouchEvent","isMouseEvent","MouseEvent","type","includes","getEventCoordinates","touches","clientX","clientY","changedTouches","getRelativeTransformOrigin","KeyboardEvent","eventCoordinates","transformOrigin","left","width","top","height","centerOfRectangle","offsetLeft","offsetTop","closestCenter","rects","centerRect","distances","map","minValueIndex","adjustScale","transform","rect1","rect2","scaleX","scaleY","getRectDelta","createRectAdjustmentFn","modifier","adjustViewRect","viewRect","adjustments","reduce","acc","adjustment","bottom","right","getAdjustedRect","isScrollable","node","computedStyle","getComputedStyle","overflowRegex","properties","find","property","test","getScrollableAncestors","element","scrollParents","findScrollableAncestors","Document","scrollingElement","push","HTMLElement","SVGElement","parentNode","getScrollableElement","canUseDOM","document","getScrollCoordinates","Window","scrollX","scrollY","scrollLeft","scrollTop","Direction","getScrollElementRect","innerWidth","innerHeight","getBoundingClientRect","getScrollPosition","scrollingContainer","scrollElementRect","minScroll","maxScroll","scrollWidth","scrollHeight","isTop","isLeft","isBottom","isRight","isDocumentScrollingElement","getScrollDirectionAndSpeed","scrollContainer","scrollContainerRect","acceleration","clientHeight","clientWidth","finalScrollContainerRect","direction","speed","Backward","abs","Forward","getScrollOffsets","add","getEdgeOffset","parent","offset","nodeOffset","offsetParent","getElementLayout","offsetWidth","offsetHeight","getViewRect","scrollOffsets","isViewRect","entry","cornersOfRectangle","closestCorners","entries","target","corners","entryCorners","undefined","accumulator","corner","Number","toFixed","getIntersectionRatio","max","min","targetArea","entryArea","intersectionArea","intersectionRatio","rectIntersection","intersections","maxValueIndex","getOwnerDocument","ownerDocument","getInitialState","initialCoordinates","lastEvent","nodes","translate","droppable","containers","reducer","state","action","DragStart","DragMove","coordinates","DragEnd","DragCancel","RegisterDroppable","SetDroppableDisabled","disabled","UnregisterDroppable","Accessibility","announcements","activeId","hiddenTextDescribedById","useAnnouncement","announce","useRef","liveRegionId","useUniqueId","useEffect","previousActiveId","previousOverId","announcement","createPortal","React","HiddenText","LiveRegion","body","useAutoScroller","draggingRect","interval","useInterval","setAutoScrollInterval","clearAutoScrollInterval","scrollSpeed","scrollDirection","scrollContainerRef","autoScroll","useCallback","scrollBy","indexOf","scrolllContainerRect","useCachedNode","draggableNode","useLazyMemo","cachedNode","useCombineActivators","sensors","getSyntheticHandler","useMemo","sensor","Sensor","sensorActivators","activator","eventName","handler","defaultValue","useLayoutRectMap","useState","setWillRecomputeLayouts","containersRef","layoutRectMap","previousValue","values","container","createLayoutRectMap","set","useScrollOffsets","scrollCoordinates","setScrollCoordinates","prevElements","handleScroll","previousElements","cleanup","scrollableElement","addEventListener","passive","filter","forEach","removeEventListener","Array","from","useScrollableAncestors","previousNode","ancestors","useSyntheticListeners","listeners","useClientRect","createUseRectFn","useClientRects","createUseRectsFn","useViewRect","getRect","forceRecompute","previousElement","useRects","useSensor","options","useSensors","Listeners","removeAll","getEventListenerTarget","KeyboardCode","defaultKeyboardCodes","start","Space","Enter","cancel","Esc","end","defaultKeyboardCoordinateGetter","currentCoordinates","code","Right","Left","Down","Up","KeyboardSensor","props","handleKeyDown","bind","attach","handleStart","setTimeout","onStart","Error","context","keyboardCodes","coordinateGetter","scrollBehavior","handleEnd","handleCancel","newCoordinates","scrollDelta","coordinatesDelta","getCoordinatesDelta","clampedCoordinates","canScrollX","canScrollY","canFullyScrollToNewCoordinates","behavior","handleMove","getAdjustedCoordinates","onMove","preventDefault","onEnd","detach","onCancel","nativeEvent","isDistanceConstraint","constraint","Boolean","isDelayConstraint","EventName","AbstractPointerSensor","events","listenerTarget","handleKeydown","activationConstraint","move","name","Keydown","timeoutId","delay","clearTimeout","activated","delta","combinedDelta","tolerance","distance","cancelable","PointerSensor","isPrimary","button","MouseButton","MouseSensor","RightClick","TouchSensor","applyModifiers","modifiers","args","defaultSensors","ActiveDraggableContext","DndContext","memo","children","collisionDetection","defaultScreenReaderInstructions","store","useReducer","activeRef","activeSensor","setActiveSensor","setActivatorEvent","latestProps","draggableDescribedById","getDraggableNode","initialActiveNodeRectRef","initialActiveNodeRect","nodeRectDelta","scrollAdjustedTransalte","translatedRect","overNode","getDroppableNode","defaultView","parentElement","useNodeRef","overlayNodeRef","setOverlayNodeRef","overlayNodeRect","modifiedTranslate","draggingNodeRect","scrolllAdjustment","collisionRect","overNodeRect","getLayoutRect","sensorContext","instantiateSensor","sensorInstance","createHandler","bindActivatorToSensorInstantiator","dndKit","defaultPrevented","capturedBy","useIsomorphicLayoutEffect","onDragMove","autoScrollEnabled","contextValue","memoizedContext","Provider","get","NullContext","defaultRole","useDraggable","attributes","useContext","role","roleDescription","tabIndex","isDragging","setNodeRef","useDndContext","defaultData","useDroppable","data","dataRef","isOver","useDerivedTransform","prevRect","initial","layoutHasChanged","useDropAnimation","animate","duration","easing","dropAnimationComplete","setDropAnimationComplete","shouldPerformDropAnimation","requestAnimationFrame","finalNode","fromNode","to","scaleDelta","finalTransform","CSS","Transform","toString","originalOpacity","style","opacity","finished","then","defaultTransition","isKeyboardActivator","defaultDropAnimation","DragOverlay","dropAnimation","transition","wrapperElement","className","zIndex","modifiedTransform","derivedTransform","intermediateTransform","position","touchAction","attributesSnapshot","derivedAttributes","finalChildren","_","otherAttributes","prevActive","shouldRender","createElement","ref"],"mappings":"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"}